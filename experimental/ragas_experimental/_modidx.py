# Autogenerated by nbdev

d = {
    "settings": {
        "branch": "main",
        "doc_baseurl": "/ragas_experimental",
        "doc_host": "https://explodinggradients.github.io",
        "git_url": "https://github.com/explodinggradients/ragas_experimental",
        "lib_path": "ragas_experimental",
    },
    "syms": {
        "ragas_experimental.backends.factory": {
            "ragas_experimental.backends.factory.RagasApiClientFactory": (
                "api/backends/factory.html#ragasapiclientfactory",
                "ragas_experimental/backends/factory.py",
            ),
            "ragas_experimental.backends.factory.RagasApiClientFactory.create": (
                "api/backends/factory.html#ragasapiclientfactory.create",
                "ragas_experimental/backends/factory.py",
            ),
        },
        "ragas_experimental.backends.mock_notion": {
            "ragas_experimental.backends.mock_notion.MockBlockChildrenAPI": (
                "backends/mock_notion_client.html#mockblockchildrenapi",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockBlockChildrenAPI.__init__": (
                "backends/mock_notion_client.html#mockblockchildrenapi.__init__",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockBlockChildrenAPI.list": (
                "backends/mock_notion_client.html#mockblockchildrenapi.list",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockBlocksAPI": (
                "backends/mock_notion_client.html#mockblocksapi",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockBlocksAPI.__init__": (
                "backends/mock_notion_client.html#mockblocksapi.__init__",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockBlocksAPI.retrieve": (
                "backends/mock_notion_client.html#mockblocksapi.retrieve",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockDatabasesAPI": (
                "backends/mock_notion_client.html#mockdatabasesapi",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockDatabasesAPI.__init__": (
                "backends/mock_notion_client.html#mockdatabasesapi.__init__",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockDatabasesAPI._extract_title": (
                "backends/mock_notion_client.html#mockdatabasesapi._extract_title",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockDatabasesAPI.create": (
                "backends/mock_notion_client.html#mockdatabasesapi.create",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockDatabasesAPI.query": (
                "backends/mock_notion_client.html#mockdatabasesapi.query",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockDatabasesAPI.retrieve": (
                "backends/mock_notion_client.html#mockdatabasesapi.retrieve",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient": (
                "backends/mock_notion_client.html#mocknotionclient",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient.__init__": (
                "backends/mock_notion_client.html#mocknotionclient.__init__",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient.__str__": (
                "backends/mock_notion_client.html#mocknotionclient.__str__",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient._create_id": (
                "backends/mock_notion_client.html#mocknotionclient._create_id",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient._get_timestamp": (
                "backends/mock_notion_client.html#mocknotionclient._get_timestamp",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient.add_block": (
                "backends/mock_notion_client.html#mocknotionclient.add_block",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient.add_children": (
                "backends/mock_notion_client.html#mocknotionclient.add_children",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient.add_database": (
                "backends/mock_notion_client.html#mocknotionclient.add_database",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockNotionClient.add_page": (
                "backends/mock_notion_client.html#mocknotionclient.add_page",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockPagesAPI": (
                "backends/mock_notion_client.html#mockpagesapi",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockPagesAPI.__init__": (
                "backends/mock_notion_client.html#mockpagesapi.__init__",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockPagesAPI._extract_title": (
                "backends/mock_notion_client.html#mockpagesapi._extract_title",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockPagesAPI.create": (
                "backends/mock_notion_client.html#mockpagesapi.create",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockPagesAPI.retrieve": (
                "backends/mock_notion_client.html#mockpagesapi.retrieve",
                "ragas_experimental/backends/mock_notion.py",
            ),
            "ragas_experimental.backends.mock_notion.MockPagesAPI.update": (
                "backends/mock_notion_client.html#mockpagesapi.update",
                "ragas_experimental/backends/mock_notion.py",
            ),
        },
        "ragas_experimental.backends.notion_backend": {
            "ragas_experimental.backends.notion_backend.NotionBackend": (
                "backends/notion.html#notionbackend",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.__init__": (
                "backends/notion.html#notionbackend.__init__",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.__repr__": (
                "backends/notion.html#notionbackend.__repr__",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.create_new_database": (
                "backends/notion.html#notionbackend.create_new_database",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.create_new_page": (
                "backends/notion.html#notionbackend.create_new_page",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.create_page_in_database": (
                "backends/notion.html#notionbackend.create_page_in_database",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.get_database": (
                "backends/notion.html#notionbackend.get_database",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.get_database_id": (
                "backends/notion.html#notionbackend.get_database_id",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.get_page_id": (
                "backends/notion.html#notionbackend.get_page_id",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.page_exists": (
                "backends/notion.html#notionbackend.page_exists",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.query_database": (
                "backends/notion.html#notionbackend.query_database",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.update_page": (
                "backends/notion.html#notionbackend.update_page",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.NotionBackend.validate_project_structure": (
                "backends/notion.html#notionbackend.validate_project_structure",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.get_database_id": (
                "backends/notion.html#get_database_id",
                "ragas_experimental/backends/notion_backend.py",
            ),
            "ragas_experimental.backends.notion_backend.get_page_id": (
                "backends/notion.html#get_page_id",
                "ragas_experimental/backends/notion_backend.py",
            ),
        },
        "ragas_experimental.backends.ragas_api_client": {
            "ragas_experimental.backends.ragas_api_client.Column": (
                "api/backends/ragas_api_client.html#column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient": (
                "api/backends/ragas_api_client.html#ragasapiclient",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.__init__": (
                "api/backends/ragas_api_client.html#ragasapiclient.__init__",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient._create_resource": (
                "api/backends/ragas_api_client.html#ragasapiclient._create_resource",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient._create_with_data": (
                "api/backends/ragas_api_client.html#ragasapiclient._create_with_data",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient._delete_resource": (
                "api/backends/ragas_api_client.html#ragasapiclient._delete_resource",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient._get_resource": (
                "api/backends/ragas_api_client.html#ragasapiclient._get_resource",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient._get_resource_by_name": (
                "api/backends/ragas_api_client.html#ragasapiclient._get_resource_by_name",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient._list_resources": (
                "api/backends/ragas_api_client.html#ragasapiclient._list_resources",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient._request": (
                "api/backends/ragas_api_client.html#ragasapiclient._request",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient._update_resource": (
                "api/backends/ragas_api_client.html#ragasapiclient._update_resource",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.convert_raw_data": (
                "api/backends/ragas_api_client.html#ragasapiclient.convert_raw_data",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_column_map": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_column_map",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_dataset": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_dataset",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_dataset_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_dataset_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_dataset_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_dataset_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_dataset_with_data": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_dataset_with_data",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_experiment": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_experiment",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_experiment_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_experiment_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_experiment_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_experiment_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_experiment_with_data": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_experiment_with_data",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_project": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_project",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.create_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.create_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.delete_dataset": (
                "api/backends/ragas_api_client.html#ragasapiclient.delete_dataset",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.delete_dataset_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.delete_dataset_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.delete_dataset_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.delete_dataset_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.delete_experiment": (
                "api/backends/ragas_api_client.html#ragasapiclient.delete_experiment",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.delete_experiment_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.delete_experiment_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.delete_experiment_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.delete_experiment_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.delete_project": (
                "api/backends/ragas_api_client.html#ragasapiclient.delete_project",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_dataset": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_dataset",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_dataset_by_name": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_dataset_by_name",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_dataset_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_dataset_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_dataset_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_dataset_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_experiment": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_experiment",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_experiment_by_name": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_experiment_by_name",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_experiment_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_experiment_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_experiment_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_experiment_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_project": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_project",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.get_project_by_name": (
                "api/backends/ragas_api_client.html#ragasapiclient.get_project_by_name",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.list_dataset_columns": (
                "api/backends/ragas_api_client.html#ragasapiclient.list_dataset_columns",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.list_dataset_rows": (
                "api/backends/ragas_api_client.html#ragasapiclient.list_dataset_rows",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.list_datasets": (
                "api/backends/ragas_api_client.html#ragasapiclient.list_datasets",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.list_experiment_columns": (
                "api/backends/ragas_api_client.html#ragasapiclient.list_experiment_columns",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.list_experiment_rows": (
                "api/backends/ragas_api_client.html#ragasapiclient.list_experiment_rows",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.list_experiments": (
                "api/backends/ragas_api_client.html#ragasapiclient.list_experiments",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.list_projects": (
                "api/backends/ragas_api_client.html#ragasapiclient.list_projects",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.update_dataset": (
                "api/backends/ragas_api_client.html#ragasapiclient.update_dataset",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.update_dataset_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.update_dataset_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.update_dataset_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.update_dataset_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.update_experiment": (
                "api/backends/ragas_api_client.html#ragasapiclient.update_experiment",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.update_experiment_column": (
                "api/backends/ragas_api_client.html#ragasapiclient.update_experiment_column",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.update_experiment_row": (
                "api/backends/ragas_api_client.html#ragasapiclient.update_experiment_row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RagasApiClient.update_project": (
                "api/backends/ragas_api_client.html#ragasapiclient.update_project",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.Row": (
                "api/backends/ragas_api_client.html#row",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.RowCell": (
                "api/backends/ragas_api_client.html#rowcell",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
            "ragas_experimental.backends.ragas_api_client.create_nano_id": (
                "api/backends/ragas_api_client.html#create_nano_id",
                "ragas_experimental/backends/ragas_api_client.py",
            ),
        },
        "ragas_experimental.core": {
            "ragas_experimental.core.foo": (
                "core.html#foo",
                "ragas_experimental/core.py",
            )
        },
        "ragas_experimental.dataset": {
            "ragas_experimental.dataset.Dataset": (
                "api/dataset.html#dataset",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.__getitem__": (
                "api/dataset.html#dataset.__getitem__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.__init__": (
                "api/dataset.html#dataset.__init__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.__iter__": (
                "api/dataset.html#dataset.__iter__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.__len__": (
                "api/dataset.html#dataset.__len__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.__repr__": (
                "api/dataset.html#dataset.__repr__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.__setitem__": (
                "api/dataset.html#dataset.__setitem__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset._update_local_entry": (
                "api/dataset.html#dataset._update_local_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.append": (
                "api/dataset.html#dataset.append",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.get": (
                "api/dataset.html#dataset.get",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.load": (
                "api/dataset.html#dataset.load",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.load_as_dicts": (
                "api/dataset.html#dataset.load_as_dicts",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.pop": (
                "api/dataset.html#dataset.pop",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.save": (
                "api/dataset.html#dataset.save",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.Dataset.to_pandas": (
                "api/dataset.html#dataset.to_pandas",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.DatasetBackend": (
                "api/dataset.html#datasetbackend",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.DatasetBackend.append_entry": (
                "api/dataset.html#datasetbackend.append_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.DatasetBackend.delete_entry": (
                "api/dataset.html#datasetbackend.delete_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.DatasetBackend.get_column_mapping": (
                "api/dataset.html#datasetbackend.get_column_mapping",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.DatasetBackend.get_entry_by_field": (
                "api/dataset.html#datasetbackend.get_entry_by_field",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.DatasetBackend.initialize": (
                "api/dataset.html#datasetbackend.initialize",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.DatasetBackend.load_entries": (
                "api/dataset.html#datasetbackend.load_entries",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.DatasetBackend.update_entry": (
                "api/dataset.html#datasetbackend.update_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend": (
                "api/dataset.html#localbackend",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.__init__": (
                "api/dataset.html#localbackend.__init__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.__repr__": (
                "api/dataset.html#localbackend.__repr__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.__str__": (
                "api/dataset.html#localbackend.__str__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend._ensure_csv_exists": (
                "api/dataset.html#localbackend._ensure_csv_exists",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend._get_csv_path": (
                "api/dataset.html#localbackend._get_csv_path",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend._write_entries_to_csv": (
                "api/dataset.html#localbackend._write_entries_to_csv",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.append_entry": (
                "api/dataset.html#localbackend.append_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.delete_entry": (
                "api/dataset.html#localbackend.delete_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.get_column_mapping": (
                "api/dataset.html#localbackend.get_column_mapping",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.get_entry_by_field": (
                "api/dataset.html#localbackend.get_entry_by_field",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.initialize": (
                "api/dataset.html#localbackend.initialize",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.load_entries": (
                "api/dataset.html#localbackend.load_entries",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.LocalBackend.update_entry": (
                "api/dataset.html#localbackend.update_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend": (
                "api/dataset.html#ragasappbackend",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.__init__": (
                "api/dataset.html#ragasappbackend.__init__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.__repr__": (
                "api/dataset.html#ragasappbackend.__repr__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.__str__": (
                "api/dataset.html#ragasappbackend.__str__",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.append_entry": (
                "api/dataset.html#ragasappbackend.append_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.delete_entry": (
                "api/dataset.html#ragasappbackend.delete_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.get_column_mapping": (
                "api/dataset.html#ragasappbackend.get_column_mapping",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.get_entry_by_field": (
                "api/dataset.html#ragasappbackend.get_entry_by_field",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.initialize": (
                "api/dataset.html#ragasappbackend.initialize",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.load_entries": (
                "api/dataset.html#ragasappbackend.load_entries",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.RagasAppBackend.update_entry": (
                "api/dataset.html#ragasappbackend.update_entry",
                "ragas_experimental/dataset.py",
            ),
            "ragas_experimental.dataset.create_dataset_backend": (
                "api/dataset.html#create_dataset_backend",
                "ragas_experimental/dataset.py",
            ),
        },
        "ragas_experimental.embedding.base": {
            "ragas_experimental.embedding.base.BaseEmbedding": (
                "api/embedding/base.html#baseembedding",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.BaseEmbedding.aembed_document": (
                "api/embedding/base.html#baseembedding.aembed_document",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.BaseEmbedding.aembed_text": (
                "api/embedding/base.html#baseembedding.aembed_text",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.BaseEmbedding.embed_document": (
                "api/embedding/base.html#baseembedding.embed_document",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.BaseEmbedding.embed_text": (
                "api/embedding/base.html#baseembedding.embed_text",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.OpenAIEmbeddings": (
                "api/embedding/base.html#openaiembeddings",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.OpenAIEmbeddings.__init__": (
                "api/embedding/base.html#openaiembeddings.__init__",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.OpenAIEmbeddings.aembed_document": (
                "api/embedding/base.html#openaiembeddings.aembed_document",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.OpenAIEmbeddings.aembed_text": (
                "api/embedding/base.html#openaiembeddings.aembed_text",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.OpenAIEmbeddings.embed_document": (
                "api/embedding/base.html#openaiembeddings.embed_document",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.OpenAIEmbeddings.embed_text": (
                "api/embedding/base.html#openaiembeddings.embed_text",
                "ragas_experimental/embedding/base.py",
            ),
            "ragas_experimental.embedding.base.ragas_embedding": (
                "api/embedding/base.html#ragas_embedding",
                "ragas_experimental/embedding/base.py",
            ),
        },
        "ragas_experimental.exceptions": {
            "ragas_experimental.exceptions.DatasetNotFoundError": (
                "api/exceptions.html#datasetnotfounderror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.DuplicateDatasetError": (
                "api/exceptions.html#duplicatedataseterror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.DuplicateError": (
                "api/exceptions.html#duplicateerror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.DuplicateExperimentError": (
                "api/exceptions.html#duplicateexperimenterror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.DuplicateProjectError": (
                "api/exceptions.html#duplicateprojecterror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.DuplicateResourceError": (
                "api/exceptions.html#duplicateresourceerror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.ExperimentNotFoundError": (
                "api/exceptions.html#experimentnotfounderror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.NotFoundError": (
                "api/exceptions.html#notfounderror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.ProjectNotFoundError": (
                "api/exceptions.html#projectnotfounderror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.RagasError": (
                "api/exceptions.html#ragaserror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.ResourceNotFoundError": (
                "api/exceptions.html#resourcenotfounderror",
                "ragas_experimental/exceptions.py",
            ),
            "ragas_experimental.exceptions.ValidationError": (
                "api/exceptions.html#validationerror",
                "ragas_experimental/exceptions.py",
            ),
        },
        "ragas_experimental.experiment": {
            "ragas_experimental.experiment.Experiment": (
                "api/experiment.html#experiment",
                "ragas_experimental/experiment.py",
            ),
            "ragas_experimental.experiment.Experiment.__init__": (
                "api/experiment.html#experiment.__init__",
                "ragas_experimental/experiment.py",
            ),
            "ragas_experimental.experiment.Experiment.__str__": (
                "api/experiment.html#experiment.__str__",
                "ragas_experimental/experiment.py",
            ),
        },
        "ragas_experimental.llm.llm": {
            "ragas_experimental.llm.llm.RagasLLM": (
                "api/llm/llm.html#ragasllm",
                "ragas_experimental/llm/llm.py",
            ),
            "ragas_experimental.llm.llm.RagasLLM.__init__": (
                "api/llm/llm.html#ragasllm.__init__",
                "ragas_experimental/llm/llm.py",
            ),
            "ragas_experimental.llm.llm.RagasLLM._check_client_async": (
                "api/llm/llm.html#ragasllm._check_client_async",
                "ragas_experimental/llm/llm.py",
            ),
            "ragas_experimental.llm.llm.RagasLLM._initialize_client": (
                "api/llm/llm.html#ragasllm._initialize_client",
                "ragas_experimental/llm/llm.py",
            ),
            "ragas_experimental.llm.llm.RagasLLM._run_async_in_current_loop": (
                "api/llm/llm.html#ragasllm._run_async_in_current_loop",
                "ragas_experimental/llm/llm.py",
            ),
            "ragas_experimental.llm.llm.RagasLLM.agenerate": (
                "api/llm/llm.html#ragasllm.agenerate",
                "ragas_experimental/llm/llm.py",
            ),
            "ragas_experimental.llm.llm.RagasLLM.generate": (
                "api/llm/llm.html#ragasllm.generate",
                "ragas_experimental/llm/llm.py",
            ),
            "ragas_experimental.llm.llm.ragas_llm": (
                "api/llm/llm.html#ragas_llm",
                "ragas_experimental/llm/llm.py",
            ),
        },
        "ragas_experimental.metric.base": {
            "ragas_experimental.metric.base.Metric": (
                "api/metric/base.html#metric",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric.__post_init__": (
                "api/metric/base.html#metric.__post_init__",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric._ensemble": (
                "api/metric/base.html#metric._ensemble",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric._get_response_model": (
                "api/metric/base.html#metric._get_response_model",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric.abatch_score": (
                "api/metric/base.html#metric.abatch_score",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric.ascore": (
                "api/metric/base.html#metric.ascore",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric.batch_score": (
                "api/metric/base.html#metric.batch_score",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric.get_variables": (
                "api/metric/base.html#metric.get_variables",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric.score": (
                "api/metric/base.html#metric.score",
                "ragas_experimental/metric/base.py",
            ),
            "ragas_experimental.metric.base.Metric.train": (
                "api/metric/base.html#metric.train",
                "ragas_experimental/metric/base.py",
            ),
        },
        "ragas_experimental.metric.decorator": {
            "ragas_experimental.metric.decorator.create_metric_decorator": (
                "api/metric/decorator.html#create_metric_decorator",
                "ragas_experimental/metric/decorator.py",
            )
        },
        "ragas_experimental.metric.discrete": {
            "ragas_experimental.metric.discrete.DiscreteMetric": (
                "api/metric/discrete.html#discretemetric",
                "ragas_experimental/metric/discrete.py",
            ),
            "ragas_experimental.metric.discrete.DiscreteMetric._ensemble": (
                "api/metric/discrete.html#discretemetric._ensemble",
                "ragas_experimental/metric/discrete.py",
            ),
            "ragas_experimental.metric.discrete.DiscreteMetric._get_response_model": (
                "api/metric/discrete.html#discretemetric._get_response_model",
                "ragas_experimental/metric/discrete.py",
            ),
        },
        "ragas_experimental.metric.numeric": {
            "ragas_experimental.metric.numeric.NumericMetric": (
                "api/metric/numeric.html#numericmetric",
                "ragas_experimental/metric/numeric.py",
            ),
            "ragas_experimental.metric.numeric.NumericMetric._ensemble": (
                "api/metric/numeric.html#numericmetric._ensemble",
                "ragas_experimental/metric/numeric.py",
            ),
            "ragas_experimental.metric.numeric.NumericMetric._get_response_model": (
                "api/metric/numeric.html#numericmetric._get_response_model",
                "ragas_experimental/metric/numeric.py",
            ),
        },
        "ragas_experimental.metric.ranking": {
            "ragas_experimental.metric.ranking.RankingMetric": (
                "api/metric/ranking.html#rankingmetric",
                "ragas_experimental/metric/ranking.py",
            ),
            "ragas_experimental.metric.ranking.RankingMetric._ensemble": (
                "api/metric/ranking.html#rankingmetric._ensemble",
                "ragas_experimental/metric/ranking.py",
            ),
            "ragas_experimental.metric.ranking.RankingMetric._get_response_model": (
                "api/metric/ranking.html#rankingmetric._get_response_model",
                "ragas_experimental/metric/ranking.py",
            ),
        },
        "ragas_experimental.metric.result": {
            "ragas_experimental.metric.result.MetricResult": (
                "api/metric/result.html#metricresult",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__add__": (
                "api/metric/result.html#metricresult.__add__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__eq__": (
                "api/metric/result.html#metricresult.__eq__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__float__": (
                "api/metric/result.html#metricresult.__float__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__ge__": (
                "api/metric/result.html#metricresult.__ge__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__get_pydantic_core_schema__": (
                "api/metric/result.html#metricresult.__get_pydantic_core_schema__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__getattr__": (
                "api/metric/result.html#metricresult.__getattr__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__getitem__": (
                "api/metric/result.html#metricresult.__getitem__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__gt__": (
                "api/metric/result.html#metricresult.__gt__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__init__": (
                "api/metric/result.html#metricresult.__init__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__int__": (
                "api/metric/result.html#metricresult.__int__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__iter__": (
                "api/metric/result.html#metricresult.__iter__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__json__": (
                "api/metric/result.html#metricresult.__json__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__le__": (
                "api/metric/result.html#metricresult.__le__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__len__": (
                "api/metric/result.html#metricresult.__len__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__lt__": (
                "api/metric/result.html#metricresult.__lt__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__mul__": (
                "api/metric/result.html#metricresult.__mul__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__radd__": (
                "api/metric/result.html#metricresult.__radd__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__repr__": (
                "api/metric/result.html#metricresult.__repr__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__rmul__": (
                "api/metric/result.html#metricresult.__rmul__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__rsub__": (
                "api/metric/result.html#metricresult.__rsub__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__rtruediv__": (
                "api/metric/result.html#metricresult.__rtruediv__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__str__": (
                "api/metric/result.html#metricresult.__str__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__sub__": (
                "api/metric/result.html#metricresult.__sub__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.__truediv__": (
                "api/metric/result.html#metricresult.__truediv__",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.result": (
                "api/metric/result.html#metricresult.result",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.to_dict": (
                "api/metric/result.html#metricresult.to_dict",
                "ragas_experimental/metric/result.py",
            ),
            "ragas_experimental.metric.result.MetricResult.validate": (
                "api/metric/result.html#metricresult.validate",
                "ragas_experimental/metric/result.py",
            ),
        },
        "ragas_experimental.model.notion_model": {
            "ragas_experimental.model.notion_model.NotionModel": (
                "model/notion_model.html#notionmodel",
                "ragas_experimental/model/notion_model.py",
            ),
            "ragas_experimental.model.notion_model.NotionModel.__getattr__": (
                "model/notion_model.html#notionmodel.__getattr__",
                "ragas_experimental/model/notion_model.py",
            ),
            "ragas_experimental.model.notion_model.NotionModel.__init__": (
                "model/notion_model.html#notionmodel.__init__",
                "ragas_experimental/model/notion_model.py",
            ),
            "ragas_experimental.model.notion_model.NotionModel.__repr__": (
                "model/notion_model.html#notionmodel.__repr__",
                "ragas_experimental/model/notion_model.py",
            ),
            "ragas_experimental.model.notion_model.NotionModel.__setattr__": (
                "model/notion_model.html#notionmodel.__setattr__",
                "ragas_experimental/model/notion_model.py",
            ),
            "ragas_experimental.model.notion_model.NotionModel.from_notion": (
                "model/notion_model.html#notionmodel.from_notion",
                "ragas_experimental/model/notion_model.py",
            ),
            "ragas_experimental.model.notion_model.NotionModel.to_notion": (
                "model/notion_model.html#notionmodel.to_notion",
                "ragas_experimental/model/notion_model.py",
            ),
            "ragas_experimental.model.notion_model.NotionModelMeta": (
                "model/notion_model.html#notionmodelmeta",
                "ragas_experimental/model/notion_model.py",
            ),
            "ragas_experimental.model.notion_model.NotionModelMeta.__new__": (
                "model/notion_model.html#notionmodelmeta.__new__",
                "ragas_experimental/model/notion_model.py",
            ),
        },
        "ragas_experimental.model.notion_typing": {
            "ragas_experimental.model.notion_typing.Field": (
                "model/notion_types.html#field",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Field.__get__": (
                "model/notion_types.html#field.__get__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Field.__init__": (
                "model/notion_types.html#field.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Field.__set__": (
                "model/notion_types.html#field.__set__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Field.__set_name__": (
                "model/notion_types.html#field.__set_name__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Field._from_notion": (
                "model/notion_types.html#field._from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Field._to_notion": (
                "model/notion_types.html#field._to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Field._to_notion_property": (
                "model/notion_types.html#field._to_notion_property",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Field.validate": (
                "model/notion_types.html#field.validate",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.ID": (
                "model/notion_types.html#id",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.ID.__init__": (
                "model/notion_types.html#id.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.ID.__new__": (
                "model/notion_types.html#id.__new__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.ID._from_notion": (
                "model/notion_types.html#id._from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.ID._to_notion": (
                "model/notion_types.html#id._to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.ID._to_notion_property": (
                "model/notion_types.html#id._to_notion_property",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.ID.validate": (
                "model/notion_types.html#id.validate",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.MultiSelect": (
                "model/notion_types.html#multiselect",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.MultiSelect.__init__": (
                "model/notion_types.html#multiselect.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.MultiSelect.__new__": (
                "model/notion_types.html#multiselect.__new__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.MultiSelect._from_notion": (
                "model/notion_types.html#multiselect._from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.MultiSelect._to_notion": (
                "model/notion_types.html#multiselect._to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.MultiSelect._to_notion_property": (
                "model/notion_types.html#multiselect._to_notion_property",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.MultiSelect.validate": (
                "model/notion_types.html#multiselect.validate",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.NotionFieldMeta": (
                "model/notion_types.html#notionfieldmeta",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.NotionFieldMeta.__init__": (
                "model/notion_types.html#notionfieldmeta.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.NotionFieldMeta.__set_name__": (
                "model/notion_types.html#notionfieldmeta.__set_name__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.NotionFieldMeta.from_notion": (
                "model/notion_types.html#notionfieldmeta.from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.NotionFieldMeta.to_notion": (
                "model/notion_types.html#notionfieldmeta.to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.NotionFieldMeta.to_notion_property": (
                "model/notion_types.html#notionfieldmeta.to_notion_property",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.NotionFieldMeta.validate": (
                "model/notion_types.html#notionfieldmeta.validate",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Select": (
                "model/notion_types.html#select",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Select.__init__": (
                "model/notion_types.html#select.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Select.__new__": (
                "model/notion_types.html#select.__new__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Select._from_notion": (
                "model/notion_types.html#select._from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Select._to_notion": (
                "model/notion_types.html#select._to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Select._to_notion_property": (
                "model/notion_types.html#select._to_notion_property",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Select.validate": (
                "model/notion_types.html#select.validate",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Text": (
                "model/notion_types.html#text",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Text.__init__": (
                "model/notion_types.html#text.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Text.__new__": (
                "model/notion_types.html#text.__new__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Text._from_notion": (
                "model/notion_types.html#text._from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Text._to_notion": (
                "model/notion_types.html#text._to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.TextNew": (
                "model/notion_types.html#textnew",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.TextNew.__init__": (
                "model/notion_types.html#textnew.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.TextNew.from_notion": (
                "model/notion_types.html#textnew.from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.TextNew.to_notion": (
                "model/notion_types.html#textnew.to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Title": (
                "model/notion_types.html#title",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Title.__init__": (
                "model/notion_types.html#title.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Title.__new__": (
                "model/notion_types.html#title.__new__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Title._from_notion": (
                "model/notion_types.html#title._from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.Title._to_notion": (
                "model/notion_types.html#title._to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.URL": (
                "model/notion_types.html#url",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.URL.__init__": (
                "model/notion_types.html#url.__init__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.URL.__new__": (
                "model/notion_types.html#url.__new__",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.URL._from_notion": (
                "model/notion_types.html#url._from_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.URL._to_notion": (
                "model/notion_types.html#url._to_notion",
                "ragas_experimental/model/notion_typing.py",
            ),
            "ragas_experimental.model.notion_typing.URL.validate": (
                "model/notion_types.html#url.validate",
                "ragas_experimental/model/notion_typing.py",
            ),
        },
        "ragas_experimental.model.pydantic_model": {
            "ragas_experimental.model.pydantic_model.ExtendedPydanticBaseModel": (
                "api/model/pydantic_mode.html#extendedpydanticbasemodel",
                "ragas_experimental/model/pydantic_model.py",
            ),
            "ragas_experimental.model.pydantic_model.ExtendedPydanticBaseModel.__init__": (
                "api/model/pydantic_mode.html#extendedpydanticbasemodel.__init__",
                "ragas_experimental/model/pydantic_model.py",
            ),
            "ragas_experimental.model.pydantic_model.ExtendedPydanticBaseModel._initialize_column_mapping": (
                "api/model/pydantic_mode.html#extendedpydanticbasemodel._initialize_column_mapping",
                "ragas_experimental/model/pydantic_model.py",
            ),
            "ragas_experimental.model.pydantic_model.ExtendedPydanticBaseModel._is_metric_result_field": (
                "api/model/pydantic_mode.html#extendedpydanticbasemodel._is_metric_result_field",
                "ragas_experimental/model/pydantic_model.py",
            ),
            "ragas_experimental.model.pydantic_model.ExtendedPydanticBaseModel.get_column_id": (
                "api/model/pydantic_mode.html#extendedpydanticbasemodel.get_column_id",
                "ragas_experimental/model/pydantic_model.py",
            ),
            "ragas_experimental.model.pydantic_model.ExtendedPydanticBaseModel.get_db_field_mapping": (
                "api/model/pydantic_mode.html#extendedpydanticbasemodel.get_db_field_mapping",
                "ragas_experimental/model/pydantic_model.py",
            ),
            "ragas_experimental.model.pydantic_model.ExtendedPydanticBaseModel.set_column_id": (
                "api/model/pydantic_mode.html#extendedpydanticbasemodel.set_column_id",
                "ragas_experimental/model/pydantic_model.py",
            ),
        },
        "ragas_experimental.project": {
            "ragas_experimental.project.ExperimentProtocol": (
                "project/experiments.html#experimentprotocol",
                "ragas_experimental/project.py",
            ),
            "ragas_experimental.project.ExperimentProtocol.__call__": (
                "project/experiments.html#experimentprotocol.__call__",
                "ragas_experimental/project.py",
            ),
            "ragas_experimental.project.ExperimentProtocol.run_async": (
                "project/experiments.html#experimentprotocol.run_async",
                "ragas_experimental/project.py",
            ),
            "ragas_experimental.project.Project.create_experiment": (
                "project/experiments.html#project.create_experiment",
                "ragas_experimental/project.py",
            ),
            "ragas_experimental.project.Project.experiment": (
                "project/experiments.html#project.experiment",
                "ragas_experimental/project.py",
            ),
            "ragas_experimental.project.Project.get_experiment": (
                "project/experiments.html#project.get_experiment",
                "ragas_experimental/project.py",
            ),
        },
        "ragas_experimental.project.comparison": {
            "ragas_experimental.project.comparison.Project.compare_experiments": (
                "project/comparison.html#project.compare_experiments",
                "ragas_experimental/project/comparison.py",
            ),
            "ragas_experimental.project.comparison._combine_experiments": (
                "project/comparison.html#_combine_experiments",
                "ragas_experimental/project/comparison.py",
            ),
            "ragas_experimental.project.comparison._get_title_property": (
                "project/comparison.html#_get_title_property",
                "ragas_experimental/project/comparison.py",
            ),
            "ragas_experimental.project.comparison._model_to_dict": (
                "project/comparison.html#_model_to_dict",
                "ragas_experimental/project/comparison.py",
            ),
            "ragas_experimental.project.comparison._validate_experiments": (
                "project/comparison.html#_validate_experiments",
                "ragas_experimental/project/comparison.py",
            ),
        },
        "ragas_experimental.project.core": {
            "ragas_experimental.project.core.Project": (
                "api/project/core.html#project",
                "ragas_experimental/project/core.py",
            ),
            "ragas_experimental.project.core.Project.__init__": (
                "api/project/core.html#project.__init__",
                "ragas_experimental/project/core.py",
            ),
            "ragas_experimental.project.core.Project._create_local_project_structure": (
                "api/project/core.html#project._create_local_project_structure",
                "ragas_experimental/project/core.py",
            ),
            "ragas_experimental.project.core.Project.create": (
                "api/project/core.html#project.create",
                "ragas_experimental/project/core.py",
            ),
            "ragas_experimental.project.core.Project.delete": (
                "api/project/core.html#project.delete",
                "ragas_experimental/project/core.py",
            ),
            "ragas_experimental.project.core.Project.get": (
                "api/project/core.html#project.get",
                "ragas_experimental/project/core.py",
            ),
            "ragas_experimental.project.core.Project.get_dataset_path": (
                "api/project/core.html#project.get_dataset_path",
                "ragas_experimental/project/core.py",
            ),
            "ragas_experimental.project.core.Project.get_experiment_path": (
                "api/project/core.html#project.get_experiment_path",
                "ragas_experimental/project/core.py",
            ),
        },
        "ragas_experimental.project.datasets": {
            "ragas_experimental.project.datasets.Project.create_dataset": (
                "api/project/datasets.html#project.create_dataset",
                "ragas_experimental/project/datasets.py",
            ),
            "ragas_experimental.project.datasets.Project.get_dataset": (
                "api/project/datasets.html#project.get_dataset",
                "ragas_experimental/project/datasets.py",
            ),
            "ragas_experimental.project.datasets.Project.get_dataset_by_id": (
                "api/project/datasets.html#project.get_dataset_by_id",
                "ragas_experimental/project/datasets.py",
            ),
            "ragas_experimental.project.datasets.Project.list_dataset_names": (
                "api/project/datasets.html#project.list_dataset_names",
                "ragas_experimental/project/datasets.py",
            ),
            "ragas_experimental.project.datasets.create_dataset_columns": (
                "api/project/datasets.html#create_dataset_columns",
                "ragas_experimental/project/datasets.py",
            ),
            "ragas_experimental.project.datasets.get_dataset_from_local": (
                "api/project/datasets.html#get_dataset_from_local",
                "ragas_experimental/project/datasets.py",
            ),
            "ragas_experimental.project.datasets.get_dataset_from_ragas_app": (
                "api/project/datasets.html#get_dataset_from_ragas_app",
                "ragas_experimental/project/datasets.py",
            ),
        },
        "ragas_experimental.project.experiments": {
            "ragas_experimental.project.experiments.ExperimentProtocol": (
                "api/project/experiments.html#experimentprotocol",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.ExperimentProtocol.__call__": (
                "api/project/experiments.html#experimentprotocol.__call__",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.ExperimentProtocol.run_async": (
                "api/project/experiments.html#experimentprotocol.run_async",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.compare_and_plot": (
                "api/project/experiments.html#project.compare_and_plot",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.create_experiment": (
                "api/project/experiments.html#project.create_experiment",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.experiment": (
                "api/project/experiments.html#project.experiment",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.get_experiment": (
                "api/project/experiments.html#project.get_experiment",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.get_experiment_by_id": (
                "api/project/experiments.html#project.get_experiment_by_id",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.get_experiment_path": (
                "api/project/experiments.html#project.get_experiment_path",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.langfuse_experiment": (
                "api/project/experiments.html#project.langfuse_experiment",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.list_experiment_names": (
                "api/project/experiments.html#project.list_experiment_names",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.Project.mlflow_experiment": (
                "api/project/experiments.html#project.mlflow_experiment",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.cleanup_experiment_branches": (
                "api/project/experiments.html#cleanup_experiment_branches",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.create_experiment_columns": (
                "api/project/experiments.html#create_experiment_columns",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.find_git_root": (
                "api/project/experiments.html#find_git_root",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.get_experiment_from_local": (
                "api/project/experiments.html#get_experiment_from_local",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.get_experiment_from_ragas_app": (
                "api/project/experiments.html#get_experiment_from_ragas_app",
                "ragas_experimental/project/experiments.py",
            ),
            "ragas_experimental.project.experiments.version_experiment": (
                "api/project/experiments.html#version_experiment",
                "ragas_experimental/project/experiments.py",
            ),
        },
        "ragas_experimental.project.naming": {
            "ragas_experimental.project.naming.MemorableNames": (
                "api/project/naming.html#memorablenames",
                "ragas_experimental/project/naming.py",
            ),
            "ragas_experimental.project.naming.MemorableNames.__init__": (
                "api/project/naming.html#memorablenames.__init__",
                "ragas_experimental/project/naming.py",
            ),
            "ragas_experimental.project.naming.MemorableNames.generate_name": (
                "api/project/naming.html#memorablenames.generate_name",
                "ragas_experimental/project/naming.py",
            ),
            "ragas_experimental.project.naming.MemorableNames.generate_unique_name": (
                "api/project/naming.html#memorablenames.generate_unique_name",
                "ragas_experimental/project/naming.py",
            ),
            "ragas_experimental.project.naming.MemorableNames.generate_unique_names": (
                "api/project/naming.html#memorablenames.generate_unique_names",
                "ragas_experimental/project/naming.py",
            ),
        },
        "ragas_experimental.prompt.base": {
            "ragas_experimental.prompt.base.Prompt": (
                "api/prompt/base.html#prompt",
                "ragas_experimental/prompt/base.py",
            ),
            "ragas_experimental.prompt.base.Prompt.__init__": (
                "api/prompt/base.html#prompt.__init__",
                "ragas_experimental/prompt/base.py",
            ),
            "ragas_experimental.prompt.base.Prompt.__str__": (
                "api/prompt/base.html#prompt.__str__",
                "ragas_experimental/prompt/base.py",
            ),
            "ragas_experimental.prompt.base.Prompt._format_examples": (
                "api/prompt/base.html#prompt._format_examples",
                "ragas_experimental/prompt/base.py",
            ),
            "ragas_experimental.prompt.base.Prompt._validate_instruction": (
                "api/prompt/base.html#prompt._validate_instruction",
                "ragas_experimental/prompt/base.py",
            ),
            "ragas_experimental.prompt.base.Prompt.add_example": (
                "api/prompt/base.html#prompt.add_example",
                "ragas_experimental/prompt/base.py",
            ),
            "ragas_experimental.prompt.base.Prompt.format": (
                "api/prompt/base.html#prompt.format",
                "ragas_experimental/prompt/base.py",
            ),
        },
        "ragas_experimental.prompt.dynamic_few_shot": {
            "ragas_experimental.prompt.dynamic_few_shot.DynamicFewShotPrompt": (
                "api/prompt/dynamic_few_shot.html#dynamicfewshotprompt",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.DynamicFewShotPrompt.__init__": (
                "api/prompt/dynamic_few_shot.html#dynamicfewshotprompt.__init__",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.DynamicFewShotPrompt.add_example": (
                "api/prompt/dynamic_few_shot.html#dynamicfewshotprompt.add_example",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.DynamicFewShotPrompt.format": (
                "api/prompt/dynamic_few_shot.html#dynamicfewshotprompt.format",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.DynamicFewShotPrompt.from_prompt": (
                "api/prompt/dynamic_few_shot.html#dynamicfewshotprompt.from_prompt",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.ExampleStore": (
                "api/prompt/dynamic_few_shot.html#examplestore",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.ExampleStore.add_example": (
                "api/prompt/dynamic_few_shot.html#examplestore.add_example",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.ExampleStore.get_examples": (
                "api/prompt/dynamic_few_shot.html#examplestore.get_examples",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.InMemoryExampleStore": (
                "api/prompt/dynamic_few_shot.html#inmemoryexamplestore",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.InMemoryExampleStore.__init__": (
                "api/prompt/dynamic_few_shot.html#inmemoryexamplestore.__init__",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.InMemoryExampleStore.__len__": (
                "api/prompt/dynamic_few_shot.html#inmemoryexamplestore.__len__",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.InMemoryExampleStore._get_embedding": (
                "api/prompt/dynamic_few_shot.html#inmemoryexamplestore._get_embedding",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.InMemoryExampleStore._get_nearest_examples": (
                "api/prompt/dynamic_few_shot.html#inmemoryexamplestore._get_nearest_examples",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.InMemoryExampleStore.add_example": (
                "api/prompt/dynamic_few_shot.html#inmemoryexamplestore.add_example",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
            "ragas_experimental.prompt.dynamic_few_shot.InMemoryExampleStore.get_examples": (
                "api/prompt/dynamic_few_shot.html#inmemoryexamplestore.get_examples",
                "ragas_experimental/prompt/dynamic_few_shot.py",
            ),
        },
        "ragas_experimental.tracing.langfuse": {
            "ragas_experimental.tracing.langfuse.LangfuseTrace": (
                "api/tracing/langfuse.html#langfusetrace",
                "ragas_experimental/tracing/langfuse.py",
            ),
            "ragas_experimental.tracing.langfuse.LangfuseTrace.__init__": (
                "api/tracing/langfuse.html#langfusetrace.__init__",
                "ragas_experimental/tracing/langfuse.py",
            ),
            "ragas_experimental.tracing.langfuse.LangfuseTrace.filter": (
                "api/tracing/langfuse.html#langfusetrace.filter",
                "ragas_experimental/tracing/langfuse.py",
            ),
            "ragas_experimental.tracing.langfuse.LangfuseTrace.get_url": (
                "api/tracing/langfuse.html#langfusetrace.get_url",
                "ragas_experimental/tracing/langfuse.py",
            ),
            "ragas_experimental.tracing.langfuse.add_query_param": (
                "api/tracing/langfuse.html#add_query_param",
                "ragas_experimental/tracing/langfuse.py",
            ),
            "ragas_experimental.tracing.langfuse.sync_trace": (
                "api/tracing/langfuse.html#sync_trace",
                "ragas_experimental/tracing/langfuse.py",
            ),
        },
        "ragas_experimental.tracing.mlflow": {
            "ragas_experimental.tracing.mlflow.MLflowTrace": (
                "api/tracing/mlflow.html#mlflowtrace",
                "ragas_experimental/tracing/mlflow.py",
            ),
            "ragas_experimental.tracing.mlflow.MLflowTrace.__init__": (
                "api/tracing/mlflow.html#mlflowtrace.__init__",
                "ragas_experimental/tracing/mlflow.py",
            ),
            "ragas_experimental.tracing.mlflow.MLflowTrace.get_filter": (
                "api/tracing/mlflow.html#mlflowtrace.get_filter",
                "ragas_experimental/tracing/mlflow.py",
            ),
            "ragas_experimental.tracing.mlflow.MLflowTrace.get_url": (
                "api/tracing/mlflow.html#mlflowtrace.get_url",
                "ragas_experimental/tracing/mlflow.py",
            ),
            "ragas_experimental.tracing.mlflow.sync_trace": (
                "api/tracing/mlflow.html#sync_trace",
                "ragas_experimental/tracing/mlflow.py",
            ),
        },
        "ragas_experimental.typing": {
            "ragas_experimental.typing.Checkbox": (
                "api/typing.html#checkbox",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Checkbox.__init__": (
                "api/typing.html#checkbox.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.ColumnType": (
                "api/typing.html#columntype",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Custom": (
                "api/typing.html#custom",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Custom.__init__": (
                "api/typing.html#custom.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Date": (
                "api/typing.html#date",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Date.__init__": (
                "api/typing.html#date.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.FieldMeta": (
                "api/typing.html#fieldmeta",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.FieldMeta.__init__": (
                "api/typing.html#fieldmeta.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.ModelConverter": (
                "api/typing.html#modelconverter",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.ModelConverter.instance_to_row": (
                "api/typing.html#modelconverter.instance_to_row",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.ModelConverter.instances_to_rows": (
                "api/typing.html#modelconverter.instances_to_rows",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.ModelConverter.model_to_columns": (
                "api/typing.html#modelconverter.model_to_columns",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.MultiSelect": (
                "api/typing.html#multiselect",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.MultiSelect.__init__": (
                "api/typing.html#multiselect.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Number": (
                "api/typing.html#number",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Number.__init__": (
                "api/typing.html#number.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Select": (
                "api/typing.html#select",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Select.__init__": (
                "api/typing.html#select.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Text": (
                "api/typing.html#text",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Text.__init__": (
                "api/typing.html#text.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Url": (
                "api/typing.html#url",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.Url.__init__": (
                "api/typing.html#url.__init__",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.get_colors_for_options": (
                "api/typing.html#get_colors_for_options",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.infer_field_type": (
                "api/typing.html#infer_field_type",
                "ragas_experimental/typing.py",
            ),
            "ragas_experimental.typing.infer_metric_result_type": (
                "api/typing.html#infer_metric_result_type",
                "ragas_experimental/typing.py",
            ),
        },
        "ragas_experimental.utils": {
            "ragas_experimental.utils.async_to_sync": (
                "api/utils.html#async_to_sync",
                "ragas_experimental/utils.py",
            ),
            "ragas_experimental.utils.create_nano_id": (
                "api/utils.html#create_nano_id",
                "ragas_experimental/utils.py",
            ),
            "ragas_experimental.utils.get_test_directory": (
                "api/utils.html#get_test_directory",
                "ragas_experimental/utils.py",
            ),
            "ragas_experimental.utils.plot_experiments_as_subplots": (
                "api/utils.html#plot_experiments_as_subplots",
                "ragas_experimental/utils.py",
            ),
        },
    },
}
